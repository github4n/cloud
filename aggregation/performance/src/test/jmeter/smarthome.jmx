<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="PropertyControlGui" testclass="ConfigTestElement" testname="Property Display" enabled="true"/>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="users" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__P(HttpDomain,&apos;192.168.5.15&apos;)}</stringProp>
          <stringProp name="HTTPSampler.port">8082</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getUserByUuid" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="uuid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">26699b31816c47639cc504c15206fe14</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">uuid</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/user/getUserByUuid</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getUuid" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/user/getUuid?userId=60</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getUser" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/user/getUser?userId=60</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getUserId" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/user/getUserId?uuid=26699b31816c47639cc504c15206fe14</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateUser" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: 11,&#xd;
  &quot;nickname&quot;: &quot;昵称&quot;,&#xd;
  &quot;tenantId&quot;: 0,&#xd;
  &quot;updateTime&quot;: &quot;2018-06-27T02:23:33.744Z&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/user/updateUser</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;pwd&quot;: &quot;d70a7f461faecfd63fdda2d37c8c6128&quot;,&#xd;
  &quot;tenantId&quot;: 0,&#xd;
  &quot;userName&quot;: &quot;weizhongbin@leedarson.com&quot;,&#xd;
  &quot;terminalMark&quot;: &quot;app&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/user/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDefaultUsedOrgInfoByUserId" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/userVirtualOrgApi/getDefaultUsedOrgInfoByUserId?userId=1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getUserToken" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/user/getUserToken?accessToken=767ee130-c150-4310-9799-bcce44bff06a</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkUserToken" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="userId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">47</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">userId</stringProp>
              </elementProp>
              <elementProp name="terminalMark" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">app</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">terminalMark</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/user/getUserToken?accessToken=767ee130-c150-4310-9799-bcce44bff06a</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="smart-home" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${__P(LoopCount,1)}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(ThreadCount,1)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(RampUp,1)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__P(HttpDoamin,192.168.5.15)}</stringProp>
          <stringProp name="HTTPSampler.port">18080</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">data_${__P(Profile,dev)}.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">userName,pwd,uuid,MQpassword,homeName,homeIds,devUuid,devPwd,subfirst</stringProp>
        </CSVDataSet>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">300</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http-login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;userName&quot;: &quot;${userName}&quot;,&#xd;
    &quot;passWord&quot;: &quot;${pwd}&quot;,&#xd;
    &quot;terminalMark&quot;:&quot;APP&quot;,&#xd;
    &quot;tenantId&quot;: 0&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/user/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">.*&quot;accessToken&quot;:&quot;(.+?)&quot;.*</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http-addHome" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;icon&quot;: &quot;bg.png&quot;,&#xd;
	&quot;name&quot;: &quot;testHome&quot;,&#xd;
	&quot;cookieUserId&quot;: &quot;${uuid}&quot;,&#xd;
	&quot;cookieUserToken&quot;: &quot;&quot;,&#xd;
	&quot;defaultSpace&quot;: 1,&#xd;
	&quot;currentMeshName&quot;: &quot;I0GFPWDR&quot;,&#xd;
	&quot;currentMeshPassword&quot;: &quot;341813&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/home/addHome</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">terminal</stringProp>
                <stringProp name="Header.value">APP</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http-getHomeList" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;offset&quot;: 0,&#xd;
  &quot;pageSize&quot;: 10&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/home/getHomeList</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">terminal</stringProp>
                <stringProp name="Header.value">APP</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">homeId</stringProp>
            <stringProp name="RegexExtractor.regex">.*&quot;homeId&quot;:&quot;(.+?)&quot;.*</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="setSecurityPasswdReq_3" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${uuid}</stringProp>
          <stringProp name="mqtt.password">${MQpassword}</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-${uuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/${uuid}/security/setSecurityPasswdReq</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
     &quot;service&quot;:&quot;security&quot;,
	&quot;method&quot;:&quot;setSecurityPasswdReq&quot;,
	&quot;topic&quot;:&quot;iot/v1/s/${uuid}/security/setSecurityPasswdReq&quot;,
	&quot;seq&quot;:&quot;123456&quot;,
	&quot;srcAddr&quot;:&quot;0.${uuid}&quot;,
	&quot;payload&quot;:{
   		&quot;homeId&quot;:&quot;${homeIds}&quot;,
     	&quot;newPasswd&quot;:&quot;${pwd}&quot;,
		&quot;oldPasswd&quot;:&quot;&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http-addRoom" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;icon&quot;: &quot;basement.png&quot;,&#xd;
	&quot;name&quot;: &quot;room1&quot;,&#xd;
	&quot;cookieUserId&quot;: &quot;${uuid}&quot;,&#xd;
	&quot;cookieUserToken&quot;: &quot;&quot;,&#xd;
	&quot;homeId&quot;: &quot;${homeIds}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/home/addRoom</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">terminal</stringProp>
                <stringProp name="Header.value">APP</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http-getRoomList" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;cookieUserId&quot;: &quot;${uuid}&quot;,&#xd;
	&quot;cookieUserToken&quot;: &quot;${token}&quot;,&#xd;
	&quot;homeId&quot;: &quot;${homeIds}&quot;,&#xd;
	&quot;pageSize&quot;: 15,&#xd;
	&quot;offset&quot;: 0&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/home/getRoomList</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">terminal</stringProp>
                <stringProp name="Header.value">APP</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http-getDeviceList" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="homeId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${homeIds}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">homeId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/deviceController/getDevList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">terminal</stringProp>
                <stringProp name="Header.value">APP</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http-addScene" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;cookieUserId&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;cookieUserToken&quot;: &quot;${token}&quot;,&#xd;
    &quot;name&quot;: &quot;testScene&quot;,&#xd;
    &quot;icon&quot;: &quot;living.png&quot;,&#xd;
    &quot;homeId&quot;: &quot;${homeIds}&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/scene/addScene</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">terminal</stringProp>
                <stringProp name="Header.value">APP</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">homeId</stringProp>
            <stringProp name="RegexExtractor.regex">.*&quot;homeId&quot;:&quot;(.+?)&quot;.*</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http-getScenes" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;cookieUserId&quot;: &quot;${uuid}&quot;,	&#xd;
	&quot;homeId&quot;: &quot;${homeIds}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/scene/getScenes</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">terminal</stringProp>
                <stringProp name="Header.value">APP</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http-addAuto" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;cookieUserId&quot;: &quot;${uuid}&quot;,&#xd;
    &quot;cookieUserToken&quot;: &quot;${token}&quot;,&#xd;
    &quot;name&quot;: &quot;testIfttt_${homeIds}&quot;,&#xd;
    &quot;icon&quot;: &quot;living.png&quot;,&#xd;
    &quot;homeId&quot;: &quot;${homeIds}&quot;,&#xd;
    &quot;enable&quot;: 0,&#xd;
    &quot;type&quot;: &quot;timer&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">automation/addAuto</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">terminal</stringProp>
                <stringProp name="Header.value">APP</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">homeId</stringProp>
            <stringProp name="RegexExtractor.regex">.*&quot;homeId&quot;:&quot;(.+?)&quot;.*</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http-getAutoList" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  	&quot;cookieUserId&quot;: &quot;${uuid}&quot;,&#xd;
	&quot;homeId&quot;: &quot;${homeIds}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/automation/getAutoList</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">terminal</stringProp>
                <stringProp name="Header.value">APP</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="app-getDevListReq" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${uuid}</stringProp>
          <stringProp name="mqtt.password">${MQpassword}</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-${uuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/${uuid}/device/getDevListReq</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
     &quot;service&quot;:&quot;device&quot;,
	&quot;method&quot;:&quot;getDevListReq&quot;,
	&quot;topic&quot;:&quot;iot/v1/s/${uuid}/device/getDevListReq&quot;,
	&quot;seq&quot;:&quot;123456&quot;,
	&quot;srcAddr&quot;:&quot;0.${uuid}&quot;,
	&quot;payload&quot;:{
   		&quot;homeId&quot;:&quot;${homeIds}&quot;,
     	&quot;pageSize&quot;:15,
		&quot;offset&quot;:0,
   		&quot;timestamp&quot;:&quot;2014-04-05T12:30:00-02:00&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="app-getRoomDevListReq" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${uuid}</stringProp>
          <stringProp name="mqtt.password">${MQpassword}</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-${uuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/${uuid}/device/getRoomDevListReq</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
     &quot;service&quot;:&quot;device&quot;,
	&quot;method&quot;:&quot;getRoomDevListReq&quot;,
	&quot;topic&quot;:&quot;iot/v1/s/${uuid}/device/getRoomDevListReq&quot;,
	&quot;seq&quot;:&quot;123456&quot;,
	&quot;srcAddr&quot;:&quot;0.${uuid}&quot;,
	&quot;payload&quot;:{
   		&quot;homeId&quot;:&quot;${homeIds}&quot;,
   		&quot;roomId&quot;:&quot;0&quot;,
     	&quot;pageSize&quot;:100,
		&quot;offset&quot;:0,
   		&quot;timestamp&quot;:&quot;2014-04-05T12:30:00-02:00&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="mqtt-getStatusReq" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${uuid}</stringProp>
          <stringProp name="mqtt.password">${MQpassword}</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-${uuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/${uuid}/security/getStatusReq</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
     &quot;service&quot;:&quot;security&quot;,
	&quot;method&quot;:&quot;getStatusReq&quot;,
	&quot;topic&quot;:&quot;iot/v1/s/${uuid}/security/getStatusReq&quot;,
	&quot;seq&quot;:&quot;123456&quot;,
	&quot;srcAddr&quot;:&quot;0.${uuid}&quot;,
	&quot;payload&quot;:{
            &quot;homeId&quot;:&quot;${homeIds}&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="device-devBindReq" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${devUuid}</stringProp>
          <stringProp name="mqtt.password">${devPwd}</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-${devUuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/${devUuid}/device/devBindReq</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;devBindReq&quot;,
	&quot;seq&quot;: &quot;123456&quot;,
	&quot;srcAddr&quot;: &quot;1.${devUuid}&quot;,
	&quot;payload&quot;: {
		&quot;userId&quot;: &quot;${uuid}&quot;,
		&quot;timestamp &quot;: &quot;2014-04-05T12:30:00-02:00&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="device-setDevAttrNotif" enabled="true">
            <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
            <stringProp name="mqtt.port">1883</stringProp>
            <stringProp name="mqtt.version">3.1.1</stringProp>
            <boolProp name="mqtt.conn_share">false</boolProp>
            <stringProp name="mqtt.conn_timeout">10</stringProp>
            <stringProp name="mqtt.protocol">TCP</stringProp>
            <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
            <stringProp name="mqtt.keystore_file_path"></stringProp>
            <stringProp name="mqtt.keystore_password"></stringProp>
            <stringProp name="mqtt.clientcert_file_path"></stringProp>
            <stringProp name="mqtt.clientcert_password"></stringProp>
            <stringProp name="mqtt.user_name">${devUuid}</stringProp>
            <stringProp name="mqtt.password">${devPwd}</stringProp>
            <stringProp name="mqtt.client_id_prefix">dev-${devUuid}</stringProp>
            <boolProp name="mqtt.client_id_suffix">false</boolProp>
            <stringProp name="mqtt.conn_keep_alive">300</stringProp>
            <stringProp name="mqtt.keep_time">1800</stringProp>
            <stringProp name="mqtt.conn_attampt_max">0</stringProp>
            <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
            <stringProp name="mqtt.topic_name">iot/v1/s/${devUuid}/device/setDevAttrNotif</stringProp>
            <stringProp name="mqtt.qos_level">1</stringProp>
            <boolProp name="mqtt.add_timestamp">false</boolProp>
            <stringProp name="mqtt.message_type">String</stringProp>
            <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
            <stringProp name="mqtt.message_to_sent">{
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;setDevAttrNotif&quot;,
	&quot;seq&quot;: &quot;123456&quot;,
	&quot;srcAddr&quot;: &quot;1.${devUuid}&quot;,
	&quot;payload&quot;: {
		&quot;devId&quot;: &quot;${subfirst}&quot;,
		&quot;attr&quot;: {
			&quot;OnOff&quot;: 1,
			&quot;Dimming&quot;: 50
		}
	},
	&quot;ack&quot;: {
		&quot;code&quot;: 200,
		&quot;desc&quot;: &quot;Success&quot;
	}
}</stringProp>
          </net.xmeter.samplers.PubSampler>
          <hashTree/>
        </hashTree>
        <net.xmeter.samplers.ConnectionSampler guiclass="net.xmeter.gui.ConnectionSamplerUI" testclass="net.xmeter.samplers.ConnectionSampler" testname="app_connect_2" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">afedab4258604f1b965e152064ff3aa7</stringProp>
          <stringProp name="mqtt.password">123456</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-afedab4258604f1b965e152064ff3aa7</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
        </net.xmeter.samplers.ConnectionSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="app-getDevListReq" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">afedab4258604f1b965e152064ff3aa7</stringProp>
          <stringProp name="mqtt.password">123456</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-afedab4258604f1b965e152064ff3aa7</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/afedab4258604f1b965e152064ff3aa7/device/getDevListReq</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
     &quot;service&quot;:&quot;device&quot;,
	&quot;method&quot;:&quot;getDevListReq&quot;,
	&quot;topic&quot;:&quot;iot/v1/s/afedab4258604f1b965e152064ff3aa7/device/getDevListReq&quot;,
	&quot;seq&quot;:&quot;123456&quot;,
	&quot;srcAddr&quot;:&quot;0.afedab4258604f1b965e152064ff3aa7&quot;,
	&quot;payload&quot;:{
   		&quot;homeId&quot;:&quot;236&quot;,
     	&quot;pageSize&quot;:15,
		&quot;offset&quot;:0,
   		&quot;timestamp&quot;:&quot;2014-04-05T12:30:00-02:00&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http-getActivityRecord" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;offset&quot;: 0,&#xd;
  &quot;pageSize&quot;: 10&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/activityController/getAllDevActivity</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">terminal</stringProp>
                <stringProp name="Header.value">APP</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http-getSecurityActivity" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;offset&quot;: 0,&#xd;
  &quot;pageSize&quot;: 10&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/activityController/getSecurityActivity</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">terminal</stringProp>
                <stringProp name="Header.value">APP</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="mqtt-connect" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">2</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <net.xmeter.samplers.ConnectionSampler guiclass="net.xmeter.gui.ConnectionSamplerUI" testclass="net.xmeter.samplers.ConnectionSampler" testname="app_connect_2" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${uuid}</stringProp>
          <stringProp name="mqtt.password">${MQpassword}</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-${uuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
        </net.xmeter.samplers.ConnectionSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">data_${__P(Profile,dev)}.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">userName,pwd,uuid,MQpassword,homeName,homeId</stringProp>
        </CSVDataSet>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <net.xmeter.samplers.ConnectionSampler guiclass="net.xmeter.gui.ConnectionSamplerUI" testclass="net.xmeter.samplers.ConnectionSampler" testname="device_connect_2" enabled="true">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${devUuid}</stringProp>
          <stringProp name="mqtt.password">${devPwd}</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-${devUuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
        </net.xmeter.samplers.ConnectionSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="publish" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">data_${__P(Profile,dev)}.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">userName,pwd,uuid,MQpassword,homeName,homeIds,devUuid,devPwd,subfirst,subsecond,subthird,subforth</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">uuidtest.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">subUuid0,subUuid1,subUuid2,subUuid3</stringProp>
        </CSVDataSet>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="service" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">leedarson</stringProp>
          <stringProp name="mqtt.password">administr</stringProp>
          <stringProp name="mqtt.client_id_prefix">server-1</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">test_topic</stringProp>
          <stringProp name="mqtt.qos_level">0</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">this is a test</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="app-connect" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${uuid}</stringProp>
          <stringProp name="mqtt.password">${MQpassword}</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-${uuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/cb/${uuid}/user/connect</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;topic&quot;: &quot;iot/v1/cb/${uuid}/user/connect&quot;,
	&quot;service&quot;: &quot;user&quot;,
	&quot;method&quot;: &quot;connect&quot;,
	&quot;seq&quot;: &quot;841278732&quot;,
	&quot;srcAddr&quot;: &quot;0.${uuid}&quot;
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="dev-connect" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${devUuid}</stringProp>
          <stringProp name="mqtt.password">${devPwd}</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-${devUuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/cb/${devUuid}/user/connect</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;topic&quot;: &quot;iot/v1/cb/${devUuid}/device/connect&quot;,
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;connect&quot;,
	&quot;seq&quot;: &quot;34c8d7c9fbfe439a9958e1df7603d696&quot;,
	&quot;srcAddr&quot;: &quot;1.${devUuid}&quot;,
	&quot;payload&quot;: {
		&quot;timestamp&quot;: &quot;2018-07-06T09:31:28+0800&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="dev-updateDevBasics" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${devUuid}</stringProp>
          <stringProp name="mqtt.password">${devPwd}</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-${devUuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/${devUuid}/device/devBindReq</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;topic&quot;: &quot;iot/v1/s/${devUuid}/device/updateDevBasics&quot;,
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;updateDevBaseInfo&quot;,
	&quot;seq&quot;: &quot;f7fa95fd94dd4fcbbe43a5b3d8d9faeb&quot;,
	&quot;srcAddr&quot;: &quot;1.${devUuid}&quot;,
	&quot;payload&quot;: {
		&quot;devId&quot;: &quot;${devUuid}&quot;,
		&quot;resetRandom&quot;: &quot;e9cf575a&quot;,
		&quot;devModel&quot;: &quot;lds.gateway.g151&quot;,
		&quot;hwVersion&quot;: &quot;1.0&quot;,
		&quot;mac&quot;: &quot;fcd6fd7001ab&quot;,
		&quot;supplier&quot;: &quot;leedarson&quot;,
		&quot;productId&quot;: &quot;lds.gateway.g151&quot;,
		&quot;ota&quot;: [{
			&quot;version&quot;: &quot;1.30&quot;,
			&quot;fwType&quot;: 0,
			&quot;stage&quot;: 0,
			&quot;percent&quot;: 0
		}],
		&quot;attr&quot;: {},
		&quot;timestamp&quot;: &quot;2018-07-06T08:58:26+0800&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="device-devBindReq" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${devUuid}</stringProp>
          <stringProp name="mqtt.password">${devPwd}</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-${devUuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/${devUuid}/device/devBindReq</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;devBindReq&quot;,
	&quot;seq&quot;: &quot;123456&quot;,
	&quot;srcAddr&quot;: &quot;1.${devUuid}&quot;,
	&quot;payload&quot;: {
		&quot;userId&quot;: &quot;${uuid}&quot;,
		&quot;timestamp &quot;: &quot;2018-07-06T09:56:24+0800&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="app-getDevListReq" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${uuid}</stringProp>
          <stringProp name="mqtt.password">${MQpassword}</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-${uuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/${uuid}/device/getDevListReq</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
     &quot;service&quot;:&quot;device&quot;,
	&quot;method&quot;:&quot;getDevListReq&quot;,
	&quot;topic&quot;:&quot;iot/v1/s/${uuid}/device/getDevListReq&quot;,
	&quot;seq&quot;:&quot;123456&quot;,
	&quot;srcAddr&quot;:&quot;0.${uuid}&quot;,
	&quot;payload&quot;:{
   		&quot;homeId&quot;:&quot;${homeIds}&quot;,
     	&quot;pageSize&quot;:15,
		&quot;offset&quot;:0,
   		&quot;timestamp&quot;:&quot;2014-04-05T12:30:00-02:00&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="setSecurityPasswdReq_3" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${uuid}</stringProp>
          <stringProp name="mqtt.password">${MQpassword}</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-${uuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/${uuid}/security/setSecurityPasswdReq</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
     &quot;service&quot;:&quot;security&quot;,
	&quot;method&quot;:&quot;setSecurityPasswdReq&quot;,
	&quot;topic&quot;:&quot;iot/v1/s/${uuid}/security/setSecurityPasswdReq&quot;,
	&quot;seq&quot;:&quot;123456&quot;,
	&quot;srcAddr&quot;:&quot;0.${uuid}&quot;,
	&quot;payload&quot;:{
   		&quot;homeId&quot;:&quot;${homeIds}&quot;,
     	&quot;newPasswd&quot;:&quot;${pwd}&quot;,
		&quot;oldPasswd&quot;:&quot;&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="app-getRoomDevListReq_homeIds" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${uuid}</stringProp>
          <stringProp name="mqtt.password">${MQpassword}</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-${uuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/${uuid}/device/getRoomDevListReq</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
     &quot;service&quot;:&quot;device&quot;,
	&quot;method&quot;:&quot;getRoomDevListReq&quot;,
	&quot;topic&quot;:&quot;iot/v1/s/${uuid}/device/getRoomDevListReq&quot;,
	&quot;seq&quot;:&quot;123456&quot;,
	&quot;srcAddr&quot;:&quot;0.${uuid}&quot;,
	&quot;payload&quot;:{
   		&quot;homeId&quot;:&quot;${homeIds}&quot;,
   		&quot;roomId&quot;:&quot;0&quot;,
     	&quot;pageSize&quot;:100,
		&quot;offset&quot;:0,
   		&quot;timestamp&quot;:&quot;2014-04-05T12:30:00-02:00&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="getStatusReq" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${uuid}</stringProp>
          <stringProp name="mqtt.password">${MQpassword}</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-${uuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/${uuid}/security/getStatusReq</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
     &quot;service&quot;:&quot;security&quot;,
	&quot;method&quot;:&quot;getStatusReq&quot;,
	&quot;topic&quot;:&quot;iot/v1/s/${uuid}/security/getStatusReq&quot;,
	&quot;seq&quot;:&quot;123456&quot;,
	&quot;srcAddr&quot;:&quot;0.${uuid}&quot;,
	&quot;payload&quot;:{
   		&quot;homeId&quot;:&quot;${homeIds}&quot;   		
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="dev-addDevNotif-light0" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${devUuid}</stringProp>
          <stringProp name="mqtt.password">${devPwd}</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-${devUuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/${devUuid}/device/addDevNotif</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;topic&quot;: &quot;iot/v1/s/${devUuid}/device/addDevNotif&quot;,
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;addDevNotif&quot;,
	&quot;seq&quot;: &quot;a3a48774b473486991ebd52e06093992&quot;,
	&quot;srcAddr&quot;: &quot;1.${devUuid}&quot;,
	&quot;payload&quot;: {
		&quot;devId&quot;: &quot;${subfirst}&quot;,
		&quot;productId&quot;: &quot;lds.light.zbtcolortemperature&quot;,
		&quot;devType&quot;: &quot;lds.light.zbtcolortemperature&quot;
	},
	&quot;ack&quot;: {
		&quot;code&quot;: 200,
		&quot;desc&quot;: &quot;success.&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="dev-addDevNotif-light1" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${devUuid}</stringProp>
          <stringProp name="mqtt.password">${devPwd}</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-${devUuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/${devUuid}/device/addDevNotif</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;topic&quot;: &quot;iot/v1/s/${devUuid}/device/addDevNotif&quot;,
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;addDevNotif&quot;,
	&quot;seq&quot;: &quot;a3a48774b473486991ebd52e06093992&quot;,
	&quot;srcAddr&quot;: &quot;1.${devUuid}&quot;,
	&quot;payload&quot;: {
		&quot;devId&quot;: &quot;${subsecond}&quot;,
		&quot;productId&quot;: &quot;lds.light.zbtcolortemperature&quot;,
		&quot;devType&quot;: &quot;lds.light.zbtcolortemperature&quot;
	},
	&quot;ack&quot;: {
		&quot;code&quot;: 200,
		&quot;desc&quot;: &quot;success.&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="dev-addDevNotif-motion" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${devUuid}</stringProp>
          <stringProp name="mqtt.password">${devPwd}</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-${devUuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/${devUuid}/device/addDevNotif</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;topic&quot;: &quot;iot/v1/s/${devUuid}/device/addDevNotif&quot;,
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;addDevNotif&quot;,
	&quot;seq&quot;: &quot;a3a48774b473486991ebd52e06093992&quot;,
	&quot;srcAddr&quot;: &quot;1.${devUuid}&quot;,
	&quot;payload&quot;: {		
		&quot;devId&quot;: &quot;${subthird}&quot;,
		&quot;productId&quot;: &quot;lds.motion.zbmotionsensors0000&quot;,
		&quot;devType&quot;: &quot;lds.motion.zbmotionsensors0000&quot;
	},
	&quot;ack&quot;: {
		&quot;code&quot;: 200,
		&quot;desc&quot;: &quot;success.&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="dev-addDevNotif-Doorlock" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${devUuid}</stringProp>
          <stringProp name="mqtt.password">${devPwd}</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-${devUuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/${devUuid}/device/addDevNotif</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;topic&quot;: &quot;iot/v1/s/${devUuid}/device/addDevNotif&quot;,
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;addDevNotif&quot;,
	&quot;seq&quot;: &quot;a3a48774b473486991ebd52e06093992&quot;,
	&quot;srcAddr&quot;: &quot;1.${devUuid}&quot;,
	&quot;payload&quot;: {
		&quot;devId&quot;: &quot;${subforth}&quot;,
		&quot;productId&quot;: &quot;lds.magnet.zbdwsensors0000&quot;,
		&quot;devType&quot;: &quot;lds.magnet.zbdwsensors0000&quot;
	},
	&quot;ack&quot;: {
		&quot;code&quot;: 200,
		&quot;desc&quot;: &quot;success.&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="app-connect-test0" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">afedab4258604f1b965e152064ff3aa7</stringProp>
          <stringProp name="mqtt.password">123456</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-afedab4258604f1b965e152064ff3aa7</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/cb/afedab4258604f1b965e152064ff3aa7/user/connect</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;topic&quot;: &quot;iot/v1/cb/afedab4258604f1b965e152064ff3aa7/user/connect&quot;,
	&quot;service&quot;: &quot;user&quot;,
	&quot;method&quot;: &quot;connect&quot;,
	&quot;seq&quot;: &quot;841278732&quot;,
	&quot;srcAddr&quot;: &quot;0.afedab4258604f1b965e152064ff3aa7&quot;
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="dev-connect-test0" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">65ef0ef5ce834e478b2ecac5844b8e53</stringProp>
          <stringProp name="mqtt.password">u64Eg5QZ</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-65ef0ef5ce834e478b2ecac5844b8e53</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/cb/${devUuid}/user/connect</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;topic&quot;: &quot;iot/v1/cb/65ef0ef5ce834e478b2ecac5844b8e53/device/connect&quot;,
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;connect&quot;,
	&quot;seq&quot;: &quot;34c8d7c9fbfe439a9958e1df7603d696&quot;,
	&quot;srcAddr&quot;: &quot;1.65ef0ef5ce834e478b2ecac5844b8e53&quot;,
	&quot;payload&quot;: {
		&quot;timestamp&quot;: &quot;2018-07-06T09:31:28+0800&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="dev-updateDevBasics-test0" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">65ef0ef5ce834e478b2ecac5844b8e53</stringProp>
          <stringProp name="mqtt.password">u64Eg5QZ</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-65ef0ef5ce834e478b2ecac5844b8e53</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/65ef0ef5ce834e478b2ecac5844b8e53/device/updateDevBasics</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;topic&quot;: &quot;iot/v1/s/65ef0ef5ce834e478b2ecac5844b8e53/device/updateDevBasics&quot;,
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;updateDevBaseInfo&quot;,
	&quot;seq&quot;: &quot;f7fa95fd94dd4fcbbe43a5b3d8d9faeb&quot;,
	&quot;srcAddr&quot;: &quot;1.65ef0ef5ce834e478b2ecac5844b8e53&quot;,
	&quot;payload&quot;: {
		&quot;devId&quot;: &quot;65ef0ef5ce834e478b2ecac5844b8e53&quot;,
		&quot;resetRandom&quot;: &quot;e9cf575a&quot;,
		&quot;devModel&quot;: &quot;lds.gateway.g151&quot;,
		&quot;hwVersion&quot;: &quot;1.0&quot;,
		&quot;mac&quot;: &quot;fcd6fd7001ab&quot;,
		&quot;supplier&quot;: &quot;leedarson&quot;,
		&quot;productId&quot;: &quot;lds.gateway.g151&quot;,
		&quot;ota&quot;: [{
			&quot;version&quot;: &quot;1.30&quot;,
			&quot;fwType&quot;: 0,
			&quot;stage&quot;: 0,
			&quot;percent&quot;: 0
		}],
		&quot;attr&quot;: {},
		&quot;timestamp&quot;: &quot;2018-07-06T08:58:26+0800&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="device-devBindReq-test0" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">65ef0ef5ce834e478b2ecac5844b8e53</stringProp>
          <stringProp name="mqtt.password">u64Eg5QZ</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-65ef0ef5ce834e478b2ecac5844b8e53</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/65ef0ef5ce834e478b2ecac5844b8e53/device/devBindReq</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;devBindReq&quot;,
	&quot;seq&quot;: &quot;123456&quot;,
	&quot;srcAddr&quot;: &quot;1.65ef0ef5ce834e478b2ecac5844b8e53&quot;,
	&quot;payload&quot;: {
		&quot;userId&quot;: &quot;afedab4258604f1b965e152064ff3aa7&quot;,
		&quot;timestamp &quot;: &quot;2018-07-06T09:56:24+0800&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="app-getDevListReq-test" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">afedab4258604f1b965e152064ff3aa7</stringProp>
          <stringProp name="mqtt.password">123456</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-afedab4258604f1b965e152064ff3aa7</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/afedab4258604f1b965e152064ff3aa7/device/getDevListReq</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
     &quot;service&quot;:&quot;device&quot;,
	&quot;method&quot;:&quot;getDevListReq&quot;,
	&quot;topic&quot;:&quot;iot/v1/s/afedab4258604f1b965e152064ff3aa7/device/getDevListReq&quot;,
	&quot;seq&quot;:&quot;123456&quot;,
	&quot;srcAddr&quot;:&quot;0.afedab4258604f1b965e152064ff3aa7&quot;,
	&quot;payload&quot;:{
   		&quot;homeId&quot;:&quot;236&quot;,
     	&quot;pageSize&quot;:15,
		&quot;offset&quot;:0,
   		&quot;timestamp&quot;:&quot;2014-04-05T12:30:00-02:00&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="app-connect-test1" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">a246cf142dc44d8f81ba67b4127fb34f</stringProp>
          <stringProp name="mqtt.password">123456</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-a246cf142dc44d8f81ba67b4127fb34f</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/cb/a246cf142dc44d8f81ba67b4127fb34f/user/connect</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;topic&quot;: &quot;iot/v1/cb/a246cf142dc44d8f81ba67b4127fb34f/user/connect&quot;,
	&quot;service&quot;: &quot;user&quot;,
	&quot;method&quot;: &quot;connect&quot;,
	&quot;seq&quot;: &quot;841278732&quot;,
	&quot;srcAddr&quot;: &quot;0.a246cf142dc44d8f81ba67b4127fb34f&quot;	
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="dev-connect-test1" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">c9a7e14a83234a90b124e7d1a3a7505e</stringProp>
          <stringProp name="mqtt.password">Mfk9SbUw</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-c9a7e14a83234a90b124e7d1a3a7505e</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/cb/c9a7e14a83234a90b124e7d1a3a7505e/user/connect</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;topic&quot;: &quot;iot/v1/cb/c9a7e14a83234a90b124e7d1a3a7505e/device/connect&quot;,
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;connect&quot;,
	&quot;seq&quot;: &quot;34c8d7c9fbfe439a9958e1df7603d696&quot;,
	&quot;srcAddr&quot;: &quot;1.c9a7e14a83234a90b124e7d1a3a7505e&quot;,
	&quot;payload&quot;: {
		&quot;timestamp&quot;: &quot;2018-07-06T09:31:28+0800&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="dev-updateDevBasics-test1" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">c9a7e14a83234a90b124e7d1a3a7505e</stringProp>
          <stringProp name="mqtt.password">Mfk9SbUw</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-c9a7e14a83234a90b124e7d1a3a7505e</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/c9a7e14a83234a90b124e7d1a3a7505e/device/updateDevBasics</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;topic&quot;: &quot;iot/v1/s/c9a7e14a83234a90b124e7d1a3a7505e/device/updateDevBasics&quot;,
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;updateDevBaseInfo&quot;,
	&quot;seq&quot;: &quot;f7fa95fd94dd4fcbbe43a5b3d8d9faeb&quot;,
	&quot;srcAddr&quot;: &quot;1.c9a7e14a83234a90b124e7d1a3a7505e&quot;,
	&quot;payload&quot;: {
		&quot;devId&quot;: &quot;c9a7e14a83234a90b124e7d1a3a7505e&quot;,
		&quot;resetRandom&quot;: &quot;e9cf575a&quot;,
		&quot;devModel&quot;: &quot;lds.gateway.g151&quot;,
		&quot;hwVersion&quot;: &quot;1.0&quot;,
		&quot;mac&quot;: &quot;fcd6fd7001ab&quot;,
		&quot;supplier&quot;: &quot;leedarson&quot;,
		&quot;productId&quot;: &quot;lds.gateway.g151&quot;,
		&quot;ota&quot;: [{
			&quot;version&quot;: &quot;1.30&quot;,
			&quot;fwType&quot;: 0,
			&quot;stage&quot;: 0,
			&quot;percent&quot;: 0
		}],
		&quot;attr&quot;: {},
		&quot;timestamp&quot;: &quot;2018-07-06T08:58:26+0800&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="device-devBindReq-test1" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">c9a7e14a83234a90b124e7d1a3a7505e</stringProp>
          <stringProp name="mqtt.password">Mfk9SbUw</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-c9a7e14a83234a90b124e7d1a3a7505e</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/c9a7e14a83234a90b124e7d1a3a7505e/device/devBindReq</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;devBindReq&quot;,
	&quot;seq&quot;: &quot;123456&quot;,
	&quot;srcAddr&quot;: &quot;1.c9a7e14a83234a90b124e7d1a3a7505e&quot;,
	&quot;payload&quot;: {
		&quot;userId&quot;: &quot;a246cf142dc44d8f81ba67b4127fb34f&quot;,
		&quot;timestamp &quot;: &quot;2018-07-06T09:56:24+0800&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="dev-updateEnergyReq-test1" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">c9a7e14a83234a90b124e7d1a3a7505e</stringProp>
          <stringProp name="mqtt.password">Mfk9SbUw</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-c9a7e14a83234a90b124e7d1a3a7505e</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/c9a7e14a83234a90b124e7d1a3a7505e/device/updateDevBasics</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;updateEnergyReq&quot;,
	&quot;seq&quot;: &quot;4&quot;,
	&quot;srcAddr&quot;: &quot;c9a7e14a83234a90b124e7d1a3a7505e&quot;,
	&quot;payload&quot;: {
		&quot;step&quot;: 30,
		&quot;time&quot;: 30,
		&quot;runtime&quot;: 10,
		&quot;value&quot;: 13
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="dev-updateDevDetails-test1" enabled="true">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${devUuid}</stringProp>
          <stringProp name="mqtt.password">${devPwd}</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-${devUuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/${devUuid}/device/updateDevDetails</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;updateDevDetails&quot;,
	&quot;seq&quot;: &quot;073d83ad9ea14c169258fccc5ad050e3&quot;,
	&quot;srcAddr&quot;: &quot;1.${devUuid}&quot;,
	&quot;payload&quot;: {
		&quot;subDev&quot;: [{
			&quot;devId&quot;: &quot;${subfirst}&quot;,
			&quot;productId&quot;: &quot;lds.light.zbtcolortemperature&quot;,
			&quot;devType&quot;: &quot;lds.light.zbtcolortemperature&quot;,
			&quot;online&quot;: 1,
			&quot;attr&quot;:{&quot;OnOff&quot;:1,&quot;RGBW&quot;:1442775040}
		}, {
			&quot;devId&quot;: &quot;${subsecond}&quot;,
			&quot;productId&quot;: &quot;lds.light.zbtcolortemperature&quot;,
			&quot;devType&quot;: &quot;lds.light.zbtcolortemperature&quot;,
			&quot;online&quot;: 1,
			&quot;attr&quot;: {&quot;OnOff&quot;:1,&quot;CCT&quot;:6412,&quot;Dimming&quot;:58}
		}, {
			&quot;devId&quot;: &quot;${subthird}&quot;,
			&quot;productId&quot;: &quot;lds.motion.zbmotionsensors0000&quot;,
			&quot;devType&quot;: &quot;lds.motion.zbmotionsensors0000&quot;,
			&quot;online&quot;: 1,
			&quot;attr&quot;: {&quot;Occupancy&quot;:1,&quot;PowerLow&quot;: 0}
		}, {
			&quot;devId&quot;: &quot;${subforth}&quot;,
			&quot;productId&quot;: &quot;lds.magnet.zbdwsensors0000&quot;,
			&quot;devType&quot;: &quot;lds.magnet.zbdwsensors0000&quot;,
			&quot;online&quot;: 1,
			&quot;attr&quot;: {&quot;Door&quot;:0}
		}]
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="dev-addDevNotif-test1" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">c9a7e14a83234a90b124e7d1a3a7505e</stringProp>
          <stringProp name="mqtt.password">Mfk9SbUw</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-c9a7e14a83234a90b124e7d1a3a7505e</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/c9a7e14a83234a90b124e7d1a3a7505e/device/addDevNotif</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent">{
	&quot;topic&quot;: &quot;iot/v1/s/c9a7e14a83234a90b124e7d1a3a7505e/device/addDevNotif&quot;,
	&quot;service&quot;: &quot;device&quot;,
	&quot;method&quot;: &quot;addDevNotif&quot;,
	&quot;seq&quot;: &quot;a3a48774b473486991ebd52e06093992&quot;,
	&quot;srcAddr&quot;: &quot;1.c9a7e14a83234a90b124e7d1a3a7505e&quot;,
	&quot;payload&quot;: {
		&quot;devId&quot;: &quot;c07136d1420511233045bb1ed61fa1af&quot;,
		&quot;productId&quot;: &quot;lds.light.zbtcolortemperature&quot;,
		&quot;devType&quot;: &quot;lds.light.zbtcolortemperature&quot;
	},
	&quot;ack&quot;: {
		&quot;code&quot;: 200,
		&quot;desc&quot;: &quot;success.&quot;
	}
}</stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="subscribe" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="app-default-test" enabled="true">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${uuid}</stringProp>
          <stringProp name="mqtt.password">${MQpassword}</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-${uuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">true</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/c/${uuid}/#</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <boolProp name="mqtt.debug_response">false</boolProp>
          <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
          <stringProp name="mqtt.sample_condition_value">1000</stringProp>
        </net.xmeter.samplers.SubSampler>
        <hashTree/>
        <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="app-bind-test" enabled="true">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${uuid}</stringProp>
          <stringProp name="mqtt.password">${MQpassword}</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-${uuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">true</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/cb/${devUuid}/#</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <boolProp name="mqtt.debug_response">false</boolProp>
          <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
          <stringProp name="mqtt.sample_condition_value">1000</stringProp>
        </net.xmeter.samplers.SubSampler>
        <hashTree/>
        <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="service" enabled="true">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">leedarson</stringProp>
          <stringProp name="mqtt.password">administr</stringProp>
          <stringProp name="mqtt.client_id_prefix">server-3</stringProp>
          <boolProp name="mqtt.client_id_suffix">false</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/s/31ec96a44e0e4d6c95aca0508f70840d/device/getDevListReq</stringProp>
          <stringProp name="mqtt.qos_level">0</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <boolProp name="mqtt.debug_response">false</boolProp>
          <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
          <stringProp name="mqtt.sample_condition_value">1000</stringProp>
        </net.xmeter.samplers.SubSampler>
        <hashTree/>
        <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="dev-default-test" enabled="true">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${devUuid}</stringProp>
          <stringProp name="mqtt.password">${devPwd}</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-${devUuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">true</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/c/${devUuid}/#</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <boolProp name="mqtt.debug_response">false</boolProp>
          <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
          <stringProp name="mqtt.sample_condition_value">1000</stringProp>
        </net.xmeter.samplers.SubSampler>
        <hashTree/>
        <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="dev-bind-test" enabled="true">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${devUuid}</stringProp>
          <stringProp name="mqtt.password">${devPwd}</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-${devUuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">true</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/cb/${uuid}/#</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <boolProp name="mqtt.debug_response">false</boolProp>
          <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
          <stringProp name="mqtt.sample_condition_value">1000</stringProp>
        </net.xmeter.samplers.SubSampler>
        <hashTree/>
        <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="device" enabled="false">
          <stringProp name="mqtt.server">127.0.0.1</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name"></stringProp>
          <stringProp name="mqtt.password"></stringProp>
          <stringProp name="mqtt.client_id_prefix">sub_</stringProp>
          <boolProp name="mqtt.client_id_suffix">true</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">test_topic</stringProp>
          <stringProp name="mqtt.qos_level">0</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <boolProp name="mqtt.debug_response">false</boolProp>
          <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
          <stringProp name="mqtt.sample_condition_value">1000</stringProp>
        </net.xmeter.samplers.SubSampler>
        <hashTree/>
        <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="app-bind" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${uuid}</stringProp>
          <stringProp name="mqtt.password">${MQpassword}</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-${uuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">true</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/cb/${devUuid}/#</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <boolProp name="mqtt.debug_response">false</boolProp>
          <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
          <stringProp name="mqtt.sample_condition_value">1000</stringProp>
        </net.xmeter.samplers.SubSampler>
        <hashTree/>
        <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="app-default" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${uuid}</stringProp>
          <stringProp name="mqtt.password">${MQpassword}</stringProp>
          <stringProp name="mqtt.client_id_prefix">web-${uuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">true</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/c/${uuid}/#</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <boolProp name="mqtt.debug_response">false</boolProp>
          <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
          <stringProp name="mqtt.sample_condition_value">1000</stringProp>
        </net.xmeter.samplers.SubSampler>
        <hashTree/>
        <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="dev-bind" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${devUuid}</stringProp>
          <stringProp name="mqtt.password">${devPwd}</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-${devUuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">true</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/cb/${uuid}/#</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <boolProp name="mqtt.debug_response">false</boolProp>
          <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
          <stringProp name="mqtt.sample_condition_value">1000</stringProp>
        </net.xmeter.samplers.SubSampler>
        <hashTree/>
        <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="dev-default" enabled="false">
          <stringProp name="mqtt.server">${__P(MqttServer,192.168.5.14)}</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name">${devUuid}</stringProp>
          <stringProp name="mqtt.password">${devPwd}</stringProp>
          <stringProp name="mqtt.client_id_prefix">dev-${devUuid}</stringProp>
          <boolProp name="mqtt.client_id_suffix">true</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">iot/v1/c/${devUuid}/#</stringProp>
          <stringProp name="mqtt.qos_level">1</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <boolProp name="mqtt.debug_response">false</boolProp>
          <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
          <stringProp name="mqtt.sample_condition_value">1000</stringProp>
        </net.xmeter.samplers.SubSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ConfigTestElement guiclass="SimpleConfigGui" testclass="ConfigTestElement" testname="Simple Config Element" enabled="true">
        <stringProp name="server">${__P(MqttServer,192.168.5.14)}</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="test" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="false">
          <stringProp name="mqtt.server">127.0.0.1</stringProp>
          <stringProp name="mqtt.port">1883</stringProp>
          <stringProp name="mqtt.version">3.1</stringProp>
          <boolProp name="mqtt.conn_share">false</boolProp>
          <stringProp name="mqtt.conn_timeout">10</stringProp>
          <stringProp name="mqtt.protocol">TCP</stringProp>
          <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
          <stringProp name="mqtt.keystore_file_path"></stringProp>
          <stringProp name="mqtt.keystore_password"></stringProp>
          <stringProp name="mqtt.clientcert_file_path"></stringProp>
          <stringProp name="mqtt.clientcert_password"></stringProp>
          <stringProp name="mqtt.user_name"></stringProp>
          <stringProp name="mqtt.password"></stringProp>
          <stringProp name="mqtt.client_id_prefix">pub_</stringProp>
          <boolProp name="mqtt.client_id_suffix">true</boolProp>
          <stringProp name="mqtt.conn_keep_alive">300</stringProp>
          <stringProp name="mqtt.keep_time">1800</stringProp>
          <stringProp name="mqtt.conn_attampt_max">0</stringProp>
          <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
          <stringProp name="mqtt.topic_name">test_topic</stringProp>
          <stringProp name="mqtt.qos_level">0</stringProp>
          <boolProp name="mqtt.add_timestamp">false</boolProp>
          <stringProp name="mqtt.message_type">String</stringProp>
          <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
          <stringProp name="mqtt.message_to_sent"></stringProp>
        </net.xmeter.samplers.PubSampler>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
